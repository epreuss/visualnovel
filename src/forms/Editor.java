package forms;
import gui.ProjectManager;
import forms.auxiliars.FileSelector;
import forms.auxiliars.ProjectName;
import gui.*;
import java.io.File;
import model.*;
import events.*;

/**
 *
 * @author Estevan
 */
public class Editor extends javax.swing.JFrame {

    ProjectManager pm;
    SceneManager sm;
    Tree tree = new Tree();

    public Editor() {
        initComponents();
        tree.createTree(MyTree);        
        LabelProjectName.setText("");    
        setMediaButtonsEnabled(false);
        this.pm = new ProjectManager(this, MenuProjectExport, MenuProjectSave);
        this.sm = new SceneManager(this, ListScene, ButtonNewScene, ButtonDeleteScene);
    }
    
    public void onProjectSceneUpdate()
    {
        sm.onProjectSceneUpdate(pm.project);        
    }
    
    /**
     * Operações para quando um projeto é criado ou aberto.
     * Exemplos: Habilitar botões.
     * @param newProject 
     */
    public void onProjectStart(Project newProject)
    {
        // Habilitar botões da SceneManager.
        ButtonNewScene.setEnabled(true);
        ButtonDeleteScene.setEnabled(true); 
        sm.updateList(newProject);
        setMediaButtonsEnabled(true);
    }
    
    /**
    * Ativa ou desativa botões da mídia.
    */
    private void setMediaButtonsEnabled(boolean active)
    {
        ButtonImportCG.setEnabled(active);
        ButtonImportBG.setEnabled(active);
        ButtonImportMusic.setEnabled(active);
        ButtonImportSprite.setEnabled(active);
    }
    
    /**
     * Callback da janela de seleção do nome do projeto.
     * @param projectName 
     */
    public void onWindowProjectNameAccept(String projectName)
    {
        LabelProjectName.setText(projectName);
        pm.onProjectCreate(projectName);
        this.setEnabled(true);    
    }    
    
    /**
     * Callback da janela de seleção do nome do projeto. 
     */
    public void onWindowProjectNameCancel()
    {
        this.setEnabled(true);    
    }
    
    /**
     * Callback da janela de seleção de arquivo.     
     * @param target
     */
    public void onFileSelected(File target)
    {
        pm.onProjectLoad(target);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelBase = new javax.swing.JPanel();
        LabelProjectName = new javax.swing.JLabel();
        PanelSceneManager = new javax.swing.JPanel();
        ButtonNewScene = new javax.swing.JButton();
        ButtonDeleteScene = new javax.swing.JButton();
        ScrollPaneScene = new javax.swing.JScrollPane();
        ListScene = new javax.swing.JList();
        PanelImport = new javax.swing.JPanel();
        ButtonImportBG = new javax.swing.JButton();
        ButtonImportSprite = new javax.swing.JButton();
        ButtonImportCG = new javax.swing.JButton();
        ButtonImportMusic = new javax.swing.JButton();
        PanelTree = new javax.swing.JPanel();
        ScrollPaneTree = new javax.swing.JScrollPane();
        MyTree = new javax.swing.JTree();
        PanelSceneText = new javax.swing.JPanel();
        ScrollPaneSceneText = new javax.swing.JScrollPane();
        TextAreaScene = new javax.swing.JTextArea();
        PanelSceneEdition = new javax.swing.JPanel();
        ButtonAddDialogue = new javax.swing.JButton();
        ButtonChangeBG = new javax.swing.JButton();
        ButtonChangeMusic = new javax.swing.JButton();
        ButtonJumpScene = new javax.swing.JButton();
        ButtonChoose = new javax.swing.JButton();
        ButtonRemoveSprite = new javax.swing.JButton();
        ButtonAddSprite = new javax.swing.JButton();
        ComboBoxSprite = new javax.swing.JComboBox();
        Separator1 = new javax.swing.JSeparator();
        Separator2 = new javax.swing.JSeparator();
        MenuBar = new javax.swing.JMenuBar();
        MenuProject = new javax.swing.JMenu();
        MenuProjectCreate = new javax.swing.JMenuItem();
        MenuProjectLoad = new javax.swing.JMenuItem();
        MenuProjectExport = new javax.swing.JMenuItem();
        MenuProjectSave = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Visual Novel - Editor");
        setMinimumSize(new java.awt.Dimension(500, 300));
        setResizable(false);

        PanelBase.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        LabelProjectName.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        LabelProjectName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelProjectName.setText("Danganronpa: Happy Trigger Havoc");
        LabelProjectName.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome"));

        PanelSceneManager.setBorder(javax.swing.BorderFactory.createTitledBorder("Cenas"));

        ButtonNewScene.setText("Nova Cena");
        ButtonNewScene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNewSceneActionPerformed(evt);
            }
        });

        ButtonDeleteScene.setText("Deletar Cena");
        ButtonDeleteScene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDeleteSceneActionPerformed(evt);
            }
        });

        ScrollPaneScene.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        ScrollPaneScene.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        ListScene.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        ListScene.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Cena 1", "Cena 2", "Cena 3", "Cena 4", "Cena 5", "Cena 6", "Cena 7" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        ListScene.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ListScene.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListSceneValueChanged(evt);
            }
        });
        ScrollPaneScene.setViewportView(ListScene);

        javax.swing.GroupLayout PanelSceneManagerLayout = new javax.swing.GroupLayout(PanelSceneManager);
        PanelSceneManager.setLayout(PanelSceneManagerLayout);
        PanelSceneManagerLayout.setHorizontalGroup(
            PanelSceneManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSceneManagerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelSceneManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ButtonNewScene, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonDeleteScene, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ScrollPaneScene, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelSceneManagerLayout.setVerticalGroup(
            PanelSceneManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSceneManagerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ButtonNewScene)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonDeleteScene)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ScrollPaneScene, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelImport.setBorder(javax.swing.BorderFactory.createTitledBorder("Importar"));

        ButtonImportBG.setText("Background");

        ButtonImportSprite.setText("Sprite");

        ButtonImportCG.setText("CG");

        ButtonImportMusic.setText("Música");

        javax.swing.GroupLayout PanelImportLayout = new javax.swing.GroupLayout(PanelImport);
        PanelImport.setLayout(PanelImportLayout);
        PanelImportLayout.setHorizontalGroup(
            PanelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelImportLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ButtonImportSprite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonImportBG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonImportCG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonImportMusic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        PanelImportLayout.setVerticalGroup(
            PanelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelImportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ButtonImportBG)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonImportSprite)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonImportCG)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonImportMusic)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelTree.setBorder(javax.swing.BorderFactory.createTitledBorder("Árvore"));

        ScrollPaneTree.setViewportView(MyTree);

        javax.swing.GroupLayout PanelTreeLayout = new javax.swing.GroupLayout(PanelTree);
        PanelTree.setLayout(PanelTreeLayout);
        PanelTreeLayout.setHorizontalGroup(
            PanelTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTreeLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ScrollPaneTree, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        PanelTreeLayout.setVerticalGroup(
            PanelTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPaneTree, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        PanelSceneText.setBorder(javax.swing.BorderFactory.createTitledBorder("Arquivo de Cena"));

        TextAreaScene.setColumns(20);
        TextAreaScene.setRows(5);
        ScrollPaneSceneText.setViewportView(TextAreaScene);

        javax.swing.GroupLayout PanelSceneTextLayout = new javax.swing.GroupLayout(PanelSceneText);
        PanelSceneText.setLayout(PanelSceneTextLayout);
        PanelSceneTextLayout.setHorizontalGroup(
            PanelSceneTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPaneSceneText, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
        );
        PanelSceneTextLayout.setVerticalGroup(
            PanelSceneTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPaneSceneText)
        );

        PanelSceneEdition.setBorder(javax.swing.BorderFactory.createTitledBorder("Edição da Cena"));

        ButtonAddDialogue.setText("Adicionar Diálogo");

        ButtonChangeBG.setText("Alterar Background");

        ButtonChangeMusic.setText("Alterar Música");

        ButtonJumpScene.setText("Pular Cena");

        ButtonChoose.setText("Fazer Escolha");

        ButtonRemoveSprite.setText("Remover Sprite");

        ButtonAddSprite.setText("Adicionar Sprite");

        ComboBoxSprite.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Esquerda", "Centro", "Direita" }));

        javax.swing.GroupLayout PanelSceneEditionLayout = new javax.swing.GroupLayout(PanelSceneEdition);
        PanelSceneEdition.setLayout(PanelSceneEditionLayout);
        PanelSceneEditionLayout.setHorizontalGroup(
            PanelSceneEditionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSceneEditionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelSceneEditionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelSceneEditionLayout.createSequentialGroup()
                        .addGroup(PanelSceneEditionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ButtonAddDialogue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonChangeMusic, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonChangeBG, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Separator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ButtonAddSprite, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonRemoveSprite, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ComboBoxSprite, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PanelSceneEditionLayout.createSequentialGroup()
                        .addGroup(PanelSceneEditionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Separator2)
                            .addComponent(ButtonJumpScene, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonChoose, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        PanelSceneEditionLayout.setVerticalGroup(
            PanelSceneEditionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSceneEditionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ButtonAddDialogue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonChangeBG)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonChangeMusic)
                .addGap(12, 12, 12)
                .addComponent(Separator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(ButtonAddSprite)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonRemoveSprite)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBoxSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Separator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonJumpScene)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonChoose)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelBaseLayout = new javax.swing.GroupLayout(PanelBase);
        PanelBase.setLayout(PanelBaseLayout);
        PanelBaseLayout.setHorizontalGroup(
            PanelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelProjectName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PanelBaseLayout.createSequentialGroup()
                        .addGroup(PanelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PanelSceneManager, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PanelImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelTree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelSceneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelSceneEdition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelBaseLayout.setVerticalGroup(
            PanelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBaseLayout.createSequentialGroup()
                .addComponent(LabelProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(PanelSceneText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PanelTree, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelBaseLayout.createSequentialGroup()
                            .addComponent(PanelSceneManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(PanelImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(PanelSceneEdition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MenuProject.setText("Projeto");

        MenuProjectCreate.setText("Criar");
        MenuProjectCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuProjectCreateActionPerformed(evt);
            }
        });
        MenuProject.add(MenuProjectCreate);

        MenuProjectLoad.setText("Carregar");
        MenuProjectLoad.setEnabled(false);
        MenuProjectLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuProjectLoadActionPerformed(evt);
            }
        });
        MenuProject.add(MenuProjectLoad);

        MenuProjectExport.setText("Exportar");
        MenuProjectExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuProjectExportActionPerformed(evt);
            }
        });
        MenuProject.add(MenuProjectExport);

        MenuProjectSave.setText("Salvar");
        MenuProjectSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuProjectSaveActionPerformed(evt);
            }
        });
        MenuProject.add(MenuProjectSave);

        MenuBar.add(MenuProject);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void MenuProjectCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuProjectCreateActionPerformed
        ProjectName window = null;
        window.main(this);
        this.setEnabled(false);                  
    }//GEN-LAST:event_MenuProjectCreateActionPerformed

    private void MenuProjectLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuProjectLoadActionPerformed
        FileSelector window = null;
        window.main(this);        
    }//GEN-LAST:event_MenuProjectLoadActionPerformed

    private void MenuProjectExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuProjectExportActionPerformed
        pm.onProjectExport();
        tree.createTree(MyTree);
    }//GEN-LAST:event_MenuProjectExportActionPerformed

    private void MenuProjectSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuProjectSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuProjectSaveActionPerformed
	
    private void ListSceneValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListSceneValueChanged
       
    }//GEN-LAST:event_ListSceneValueChanged

    private void ButtonDeleteSceneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDeleteSceneActionPerformed
        if (pm.deleteScene(ListScene.getSelectedIndex()))
            onProjectSceneUpdate();
    }//GEN-LAST:event_ButtonDeleteSceneActionPerformed

    private void ButtonNewSceneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNewSceneActionPerformed
        pm.addScene();
        onProjectSceneUpdate();
    }//GEN-LAST:event_ButtonNewSceneActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAddDialogue;
    private javax.swing.JButton ButtonAddSprite;
    private javax.swing.JButton ButtonChangeBG;
    private javax.swing.JButton ButtonChangeMusic;
    private javax.swing.JButton ButtonChoose;
    private javax.swing.JButton ButtonDeleteScene;
    private javax.swing.JButton ButtonImportBG;
    private javax.swing.JButton ButtonImportCG;
    private javax.swing.JButton ButtonImportMusic;
    private javax.swing.JButton ButtonImportSprite;
    private javax.swing.JButton ButtonJumpScene;
    private javax.swing.JButton ButtonNewScene;
    private javax.swing.JButton ButtonRemoveSprite;
    private javax.swing.JComboBox ComboBoxSprite;
    private javax.swing.JLabel LabelProjectName;
    private javax.swing.JList ListScene;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenu MenuProject;
    private javax.swing.JMenuItem MenuProjectCreate;
    private javax.swing.JMenuItem MenuProjectExport;
    private javax.swing.JMenuItem MenuProjectLoad;
    private javax.swing.JMenuItem MenuProjectSave;
    private javax.swing.JTree MyTree;
    private javax.swing.JPanel PanelBase;
    private javax.swing.JPanel PanelImport;
    private javax.swing.JPanel PanelSceneEdition;
    private javax.swing.JPanel PanelSceneManager;
    private javax.swing.JPanel PanelSceneText;
    private javax.swing.JPanel PanelTree;
    private javax.swing.JScrollPane ScrollPaneScene;
    private javax.swing.JScrollPane ScrollPaneSceneText;
    private javax.swing.JScrollPane ScrollPaneTree;
    private javax.swing.JSeparator Separator1;
    private javax.swing.JSeparator Separator2;
    private javax.swing.JTextArea TextAreaScene;
    // End of variables declaration//GEN-END:variables
}
